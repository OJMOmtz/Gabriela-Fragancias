-- Tabla Cliente
CREATE TABLE Cliente (
    id_cliente SERIAL PRIMARY KEY,
    tarjeta VARCHAR(5),
    nombre VARCHAR(100) NOT NULL,
    apellido VARCHAR(100) NOT NULL,
    cedula_ruc VARCHAR(20) UNIQUE NOT NULL,
    email VARCHAR(100) CHECK (email LIKE '%_@_%._%'),
    telefono VARCHAR(20),
    direccion TEXT,
    tipo_pago VARCHAR(20),
    grupo_economico VARCHAR(50),
    sexo CHAR(1) CHECK (sexo IN ('M', 'F')),
    edad INTEGER CHECK (edad >= 18)
);

-- Clientes (Customers)
CREATE TABLE clientes (
    id SERIAL PRIMARY KEY,
    nombre VARCHAR(100) NOT NULL,
    documento VARCHAR(20) UNIQUE,
    telefono VARCHAR(20),
    email VARCHAR(100),
    direccion TEXT,
    ubicacion geography(POINT, 4326),
    zona_id INTEGER REFERENCES zonas(id),
    fecha_registro DATE DEFAULT CURRENT_DATE,
    estado BOOLEAN DEFAULT true
);

-- Tabla Clientes
CREATE TABLE gf.clientes (
    id_cliente INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    tarjeta VARCHAR(5), --este número se puede repetir en otras zonas y en la misma con otro cliente
    numero_cedula VARCHAR(20) UNIQUE NOT NULL,
	id_ruc SERIAL PRIMARY KEY, -referencia a la tabla gf.ruc
    nombre VARCHAR(100) NOT NULL,
    apellido VARCHAR(100) NOT NULL,
    id_prefijo INTEGER REFERENCES prefijos(id_prefijo),
    numero_telefono VARCHAR(20),
	numero_celular VARCHAR(20),
    numero_tarjeta VARCHAR(20) UNIQUE,
	id_zona SERIAL PRIMARY KEY,
	id_direccion INTEGER REFERENCES direcciones(id_direccion),
    direccion GEOGRAPHY(POINT, 4326),
    saldo INTEGER DEFAULT 0,
    tipo_pago VARCHAR(20) CHECK (tipo_pago IN ('SEM', 'QUIN', 'MENS')),
    fecha_registro TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
    estado VARCHAR(20) CHECK (estado IN ('activo', 'inactivo')) DEFAULT 'activo',
    ultimo_inicio_sesion TIMESTAMP WITH TIME ZONE
);

-- Tabla Clientes
CREATE TABLE clientes (
    id_cliente SERIAL PRIMARY KEY,
    nombre VARCHAR(100) NOT NULL,
    apellido VARCHAR(100) NOT NULL,
    cedula VARCHAR(20) UNIQUE NOT NULL,
    direccion TEXT NOT NULL,
    telefono VARCHAR(20),
    zona VARCHAR(50) NOT NULL,
    fecha_registro DATE DEFAULT CURRENT_DATE
);

-- Tabla Clientes
CREATE TABLE clientes (
    id_cliente SERIAL PRIMARY KEY,
    nombre VARCHAR(100) NOT NULL,
    apellido VARCHAR(100) NOT NULL,
    cedula VARCHAR(20) UNIQUE NOT NULL,
    direccion TEXT NOT NULL,
    telefono VARCHAR(20),
    email VARCHAR(100) UNIQUE,
    zona VARCHAR(50) NOT NULL,
    fecha_registro DATE DEFAULT CURRENT_DATE
);

-- Tabla de Clientes
CREATE TABLE Clientes (
    id_cliente SERIAL PRIMARY KEY,
	tarjeta VARCHAR(7) UNIQUE NOT NULL,  -- Número de tarjeta obligatorio y valor reemplazado por otro cliente y zona
    id_persona INTEGER REFERENCES Persona(id_persona),
    cedula VARCHAR(20) UNIQUE NOT NULL,
    nombre VARCHAR(100) NOT NULL,
    apellido VARCHAR(100) NOT NULL,
    telefono VARCHAR(20),
    direccion TEXT,
    email VARCHAR(100),
    ruc VARCHAR(20) UNIQUE,
    fecha_registro DATE DEFAULT CURRENT_DATE,
    tipo_pago VARCHAR(20) CHECK (tipo_pago IN ('SEM', 'QUIN', 'MENS')),  -- SEM (semanal), QUIN (quincenal), MENS (mensual)
    saldo DECIMAL(10, 2) DEFAULT 0
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

-- Tabla de Clientes
CREATE TABLE clientes (
    id_cliente SERIAL PRIMARY KEY,
    nombre VARCHAR(100),
    apellido VARCHAR(100),
    cedula VARCHAR(20),
    direccion TEXT,
    telefono VARCHAR(20),
    zona VARCHAR(50)
);

--Tabla Clientes
CREATE TABLE Clientes (
    id_cliente SERIAL PRIMARY KEY,
    cedula VARCHAR(20) UNIQUE NOT NULL,
    nombre VARCHAR(100) NOT NULL,
    apellido VARCHAR(100) NOT NULL,
    telefono VARCHAR(20),
    direccion TEXT,
    email VARCHAR(100),
    ruc VARCHAR(20) UNIQUE,
    fecha_registro DATE DEFAULT CURRENT_DATE
);

-- Tabla Clientes
CREATE TABLE Clientes (
    id_cliente SERIAL PRIMARY KEY,
    id_persona INTEGER REFERENCES Personas(id_persona),
    tarjeta VARCHAR(7) UNIQUE NOT NULL,  -- Número de tarjeta obligatorio y único
    saldo DECIMAL(10, 2) DEFAULT 0,
    tipo_pago VARCHAR(20) CHECK (tipo_pago IN ('SEM', 'QUIN', 'MENS')),
    fecha_registro DATE DEFAULT CURRENT_DATE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

--Tabla Clientes
CREATE TABLE Clientes (
    id_cliente SERIAL PRIMARY KEY,
    id_persona INTEGER REFERENCES Personas(id_persona),
    tarjeta VARCHAR(7) UNIQUE NOT NULL,  -- Número de tarjeta obligatorio y único
    saldo DECIMAL(10, 2) DEFAULT 0,
    tipo_pago VARCHAR(20) CHECK (tipo_pago IN ('SEM', 'QUIN', 'MENS')),
    fecha_registro DATE DEFAULT CURRENT_DATE,
	cedula VARCHAR(20) UNIQUE NOT NULL,
    nombre VARCHAR(100) NOT NULL,
    apellido VARCHAR(100) NOT NULL,
    telefono VARCHAR(20),
    direccion TEXT,
    email VARCHAR(100),
    ruc VARCHAR(20) UNIQUE,
    fecha_registro DATE DEFAULT CURRENT_DATE
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

--Tabla Clientes
CREATE TABLE Clientes (
    id_cliente SERIAL PRIMARY KEY,
    id_persona INTEGER REFERENCES Personas(id_persona),  -- Relación con la tabla Personas
    tarjeta VARCHAR(7) UNIQUE NOT NULL,  -- Número de tarjeta obligatorio y único
    saldo DECIMAL(10, 2) DEFAULT 0,
    tipo_pago VARCHAR(20) CHECK (tipo_pago IN ('SEM', 'QUIN', 'MENS')),  -- Tipo de pago con restricciones
    fecha_registro DATE DEFAULT CURRENT_DATE,  -- Fecha de registro, sin duplicación
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,  -- Fecha de creación
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP  -- Fecha de actualización
);

--Tabla Clientes
CREATE TABLE Clientes (
    id_cliente SERIAL PRIMARY KEY,
    id_persona INTEGER REFERENCES Personas(id_persona),  -- Relación con la tabla Personas
    tarjeta VARCHAR(7) UNIQUE NOT NULL,  -- Número de tarjeta obligatorio y único por cliente
    saldo DECIMAL(10, 2) DEFAULT 0,  -- Saldo del cliente
    tipo_pago VARCHAR(20) CHECK (tipo_pago IN ('SEM', 'QUIN', 'MENS')),  -- Tipo de pago: Semanal, Quincenal, Mensual
    fecha_registro DATE DEFAULT CURRENT_DATE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

--Tabla Clientes
CREATE TABLE Clientes (
    id_cliente SERIAL PRIMARY KEY,
    id_persona INTEGER REFERENCES Personas(id_persona),  -- Relación con la tabla Personas
    tarjeta VARCHAR(7) UNIQUE NOT NULL,  -- Número de tarjeta obligatorio y único por cliente
    saldo DECIMAL(10, 2) DEFAULT 0,  -- Saldo del cliente
    tipo_pago VARCHAR(20) CHECK (tipo_pago IN ('SEM', 'QUIN', 'MENS')),  -- Tipo de pago: Semanal, Quincenal, Mensual
    fecha_registro DATE DEFAULT CURRENT_DATE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

-- Tabla Clientes
CREATE TABLE Clientes (
    id_cliente SERIAL PRIMARY KEY,
    nombre VARCHAR(100) NOT NULL,
    apellido VARCHAR(100) NOT NULL,
    cedula VARCHAR(20) UNIQUE NOT NULL,
    direccion TEXT NOT NULL,
    telefono VARCHAR(20),
    email VARCHAR(100) UNIQUE,
    zona VARCHAR(50) NOT NULL,
    fecha_registro DATE DEFAULT CURRENT_DATE
);

-- Tabla de Clientes
CREATE TABLE clientes (
    id_cliente SERIAL PRIMARY KEY,
    nombre VARCHAR(100),
    apellido VARCHAR(100),
    cedula VARCHAR(20) UNIQUE,
    ruc VARCHAR(20) UNIQUE,
    email VARCHAR(100),
    telefono VARCHAR(20),
    direccion TEXT,
    tipo_pago VARCHAR(20),
    grupo_economico VARCHAR(50),
    sexo VARCHAR(10),
    edad INTEGER,
    afiliacion_politica VARCHAR(50)
);